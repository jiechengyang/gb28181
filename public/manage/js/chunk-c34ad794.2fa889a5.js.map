{"version":3,"sources":["webpack:///./src/views/resource/record/playback/index.vue?234a","webpack:///./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack:///./src/components/PlaybackBar.vue?6b1b","webpack:///src/components/PlaybackBar.vue","webpack:///./src/components/PlaybackBar.vue?268a","webpack:///./src/components/PlaybackBar.vue","webpack:///src/views/resource/record/playback/index.vue","webpack:///./src/views/resource/record/playback/index.vue?9be9","webpack:///./src/views/resource/record/playback/index.vue","webpack:///./src/views/resource/record/playback/index.vue?d42f","webpack:///./src/components/PlaybackBar.vue?740e","webpack:///./src/api/device.js","webpack:///./src/views/resource/record/playback/index.vue?5540","webpack:///./src/api/record.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","loading","_v","_s","ipc","channel_name","_e","on","onDateChange","model","value","queryParams","callback","$$v","$set","expression","downloadLoading","videoUrl","download","ref","aspect","autoplay","muted","currentTime","fluent","stretch","onPlayEnded","onPlay","onPlayError","onPlayTimeUpdate","currentDate","timeData","onPlaybackBarTimeChange","staticRenderFns","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_m","component","saveBindPartner","formData","Request","promisePost","getUnboundPartnerDevices","params","get","editNvr","id","getNvrDevices","getIpcDevices","getStatusItems","getNvr","getDeviceRegisterLogs","promiseGet","getDeviceActiveLogs","batchDeleteIpc","ids","post","editIpc","batchSyncIpc","batchActiveIpc","batchLockIpc","batchOpenLiveIpc","batchCloseLiveIpc","getMediaServerList","batchUpdateMediaServer","mediaServerId","batchUpdateRtpProto","rtpProto","rtp_proto","nvrItems","batchBindRecorder","recorderId","videoOnlineList","videoSrc","url","ptzCtrl","mainId","command","main_id","command_type","liveUrl","batchBindRecordPlan","planId","ipcShow","getRecordPlans","addRecordPlan","editRecordPlan","getRecordPlan","delRecordPlan","getRecordPlanItems","getRecordChannels","getRecordFiles","getSummaryList","startPlayBack","video_id","closePlayBack","delPlayBack"],"mappings":"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","file":"js/chunk-c34ad794.2fa889a5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"box box-primary play-backs\"},[_c('a-spin',{attrs:{\"tip\":\"Loading...\",\"spinning\":_vm.loading}},[_c('div',{staticClass:\"spin-content\"},[_c('div',{staticClass:\"box-header\"},[(_vm.ipc)?_c('h2',{staticClass:\"text-primary text-center\"},[_vm._v(\"云端录像(\"+_vm._s(_vm.ipc.channel_name)+\")-时间轴视图\")]):_vm._e()]),_c('div',{staticClass:\"box-body\"},[_c('div',{staticClass:\"form-inline\",attrs:{\"autocomplete\":\"off\",\"spellcheck\":\"false\"}},[_c('div',{staticClass:\"form-group pull-right\"},[_c('div',{staticClass:\"input-group input-group-sm\"},[_c('a-date-picker',{staticClass:\"playback-date\",on:{\"change\":_vm.onDateChange},model:{value:(_vm.queryParams.date),callback:function ($$v) {_vm.$set(_vm.queryParams, \"date\", $$v)},expression:\"queryParams.date\"}}),_c('a-button',{attrs:{\"type\":\"default\",\"icon\":\"download\",\"loading\":_vm.downloadLoading,\"disabled\":_vm.videoUrl === ''},on:{\"click\":_vm.download}}),_c('div',{staticClass:\"input-group-btn\"})],1)])]),_c('div',{staticClass:\"clearfix\"}),_c('EasyPlayer',{ref:\"recorder\",attrs:{\"video-title\":\"录像回放\",\"videoUrl\":_vm.videoUrl,\"aspect\":_vm.aspect,\"onDemand\":true,\"autoplay\":_vm.autoplay,\"muted\":_vm.muted,\"currentTime\":_vm.currentTime,\"element-loading-text\":\"加载中...\",\"element-loading-background\":\"#000\",\"fluent\":_vm.fluent,\"stretch\":_vm.stretch},on:{\"ended\":_vm.onPlayEnded,\"play\":_vm.onPlay,\"error\":_vm.onPlayError,\"timeupdate\":_vm.onPlayTimeUpdate}}),_c('div',{staticClass:\"clearfix\"}),_c('playback-bar',{attrs:{\"initDate\":_vm.currentDate,\"timeData\":_vm.timeData},on:{\"timechange\":_vm.onPlaybackBarTimeChange}}),_c('br')],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"playbackbar\",attrs:{\"id\":\"playbackbar_div\"}},[_c('canvas',{attrs:{\"id\":\"playbackbar\"}})])}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"playbackbar\" id=\"playbackbar_div\">\n        <canvas id=\"playbackbar\"></canvas>\n    </div>\n</template>\n\n<script>\nimport moment from 'moment'\nexport default {\n    components: {},\n    props: {\n        // 初始化时间 => 2021-08-20 00:00:00\n        initDate: {\n            type: String\n        },\n        /**\n         * 记录的区域列表\n         * @attribute startTime 开始时间 YYYY-MM-DD HH:mm:ss\n         * @attribute endTime 结束时间 YYYY-MM-DD HH:mm:ss\n         */\n        timeData: {\n            type: Array,\n            default: () => []\n        }\n    },\n    data() {\n        return {\n            nowDate: '', // 当前时间\n            mouseNowDate: '', // 鼠标移入画布时当前时间记录\n\n            ctx: null, // 画布区域环境\n            _width: 0, // 画布宽\n            _height: 0, // 画布高\n\n            isMouseDown: false, // 是否在画布上按下鼠标\n            mousedownX: 0, // 鼠标按下的X\n            mousedownY: 0, // 鼠标按下的Y\n            size: 160, // 坐标尺寸\n            axisTick: 1 // 默认刻度1，默认一小时一刻度\n        }\n    },\n\n    watch: {\n        initDate() {\n            this.nowDate = this.initDate\n            this.initCanvas()\n        }\n    },\n    computed: {\n        // 计算1个移动像素代表多少秒数\n        pxToSecond() {\n            return (this.axisTick * 60 * 60) / this.size\n        }\n    },\n    mounted() {\n        this.nowDate = this.initDate\n        this.initCanvas()\n        this.onDocumentEvent()\n        // 注册事件 -- 防抖\n        let bAntiShike = false\n        window.onresize = () => {\n            if (!bAntiShike) {\n                bAntiShike = true\n                setTimeout(() => {\n                    this.initCanvas()\n                    bAntiShike = false\n                }, 300)\n            }\n        }\n    },\n    beforeDestroy() {\n        // 事件注销\n        window.onresize = null\n        document.onmousemove = null\n        document.onmouseup = null\n    },\n    methods: {\n        initCanvas() {\n            const box = document.getElementById('playbackbar_div')\n            this._width = box.offsetWidth\n            this._height = box.offsetHeight\n            const canvas = document.getElementById('playbackbar')\n            canvas.width = this._width\n            canvas.height = this._height\n            this.ctx = canvas.getContext('2d')\n            this.onBaseFill(this.ctx, this._width, this._height)\n            this.onDrawNowDate(this.ctx, this._width)\n            this.onMouseHandle(canvas, this.ctx, this._width, this._height)\n        },\n        // 初始化绘制\n        onBaseFill(ctx, _width, _height) {\n            // 时间线上轴线\n            ctx.beginPath()\n            ctx.strokeStyle = '#303030'\n            ctx.lineWidth = 3\n            ctx.moveTo(0, 40.5)\n            ctx.lineTo(_width, 40.5)\n            ctx.stroke()\n\n            this.onDrawTick(ctx, _width, _height)\n            this.onDrawRecordArea(ctx, _width, _height)\n            // 时间抽线区域线\n            ctx.beginPath()\n            ctx.strokeStyle = '#B1BE76'\n            ctx.lineWidth = 1\n            ctx.moveTo(0, 42.5)\n            ctx.lineTo(_width, 42.5)\n            ctx.stroke()\n            ctx.beginPath()\n            ctx.strokeStyle = '#FFFF00'\n            ctx.lineWidth = 1\n            ctx.moveTo(0, 50.5)\n            ctx.lineTo(_width, 50.5)\n            ctx.stroke()\n            // 中间时间线\n            ctx.beginPath()\n            ctx.strokeStyle = '#ffcc00'\n            ctx.lineWidth = 2\n            ctx.moveTo(_width / 2 - 1 + 0.5, 0)\n            ctx.lineTo(_width / 2 - 1 + 0.5, _height)\n            ctx.stroke()\n        },\n        // 轴线刻度线\n        onDrawTick(ctx, _width, _height) {\n            // 当前时间的毫秒数\n            const nowTime = new Date(this.nowDate).getTime()\n            // 离当前时间左边最近的整数点毫秒数\n            const leftIntTime = new Date(moment(this.nowDate).format('YYYY-MM-DD HH') + ':00:00').getTime()\n            const nowHour = moment(this.nowDate).format('HH')\n            // 当前时间距离左侧整数时间的秒数\n            const leftIntSecond = (nowTime - leftIntTime) / 1000\n            // 求出中间时间点距离左侧整数点的像素距离\n            const leftIntLength = leftIntSecond / this.pxToSecond\n            // 以该整数点为中间点向左右绘制轴线\n            const center = _width / 2 - 1 - leftIntLength\n            // 左侧轴线个数\n            const leftTickNumber = Math.floor(center / this.size)\n            // 右侧轴线个数\n            const rightTickNumber = Math.floor((_width - center) / this.size)\n            // 左轴线绘制\n            for (let i = 0; i <= leftTickNumber; i++) {\n                // 当前X轴的位置\n                const _X = center - i * this.size\n                let hour = Number(nowHour) - i\n                if (hour < 0) {\n                    hour += 24\n                }\n                const timeText = hour < 10 ? `0${hour}:00` : `${hour}:00`\n                // 绘制轴线\n                ctx.beginPath()\n                ctx.strokeStyle = '#4B4B4B'\n                ctx.lineWidth = 2\n                ctx.moveTo(_X + 0.5, 40)\n                ctx.lineTo(_X + 0.5, _height)\n                ctx.stroke()\n                ctx.font = '10px Arial'\n                ctx.fillStyle = '#969696'\n                ctx.fillText(timeText, _X + 0.5 - 12, 34)\n            }\n            // 右轴线绘制\n            for (let i = 1; i <= rightTickNumber; i++) {\n                // 当前X轴的位置\n                const _X = center + i * this.size\n                let hour = Number(nowHour) + i\n                if (hour >= 24) {\n                    hour -= 24\n                }\n                const timeText = hour < 10 ? `0${hour}:00` : `${hour}:00`\n                // 绘制轴线\n                ctx.beginPath()\n                ctx.strokeStyle = '#4B4B4B'\n                ctx.lineWidth = 2\n                ctx.moveTo(_X + 0.5, 40)\n                ctx.lineTo(_X + 0.5, _height)\n                ctx.stroke()\n                ctx.font = '10px Arial'\n                ctx.fillStyle = '#969696'\n                ctx.fillText(timeText, _X + 0.5 - 12, 34)\n            }\n        },\n        // 绘制当前时间\n        onDrawNowDate(ctx, _width) {\n            ctx.font = '14px Arial'\n            ctx.fillStyle = '#ffffff'\n            ctx.fillText(this.nowDate, _width / 2 - 75, 24)\n        },\n        // 绘制存在视频记录区域\n        onDrawRecordArea(ctx, _width, _height) {\n            // 当前时间的毫秒数\n            const nowTime = new Date(this.nowDate).getTime()\n            // 左侧顶点的时间秒数\n            const leftVertexTime = nowTime / 1000 - (_width / 2) * this.pxToSecond\n            // 右侧顶点的时间秒数\n            const rightVertexTime = nowTime / 1000 + (_width / 2) * this.pxToSecond\n            // 在可视范围内的视频记录\n            const timeList = this.timeData.filter((r) => {\n                const startTimeSecond = new Date(r.startTime).getTime() / 1000\n                const endTimeSecond = new Date(r.endTime).getTime() / 1000\n                if (\n                    (startTimeSecond < leftVertexTime && endTimeSecond > leftVertexTime) ||\n                    (startTimeSecond >= leftVertexTime && startTimeSecond < rightVertexTime)\n                ) {\n                    return true\n                } else {\n                    return false\n                }\n            })\n            timeList.map((r) => {\n                const startTimeSecond = new Date(r.startTime).getTime() / 1000\n                const endTimeSecond = new Date(r.endTime).getTime() / 1000\n                //如果起始时间比左侧顶点时间小，说明区域从左侧顶点开始\n                if (startTimeSecond < leftVertexTime) {\n                    // 获取该时间段在可视范围的长度\n                    const _W =\n                        endTimeSecond < rightVertexTime ? (endTimeSecond - leftVertexTime) / this.pxToSecond : _width\n\n                    // 绘制播放长度 矩形区域\n                    ctx.beginPath()\n                    ctx.fillStyle = '#637DEC'\n                    ctx.fillRect(0, 43, _W, 8)\n                }\n                // 如果起始时间在可视范围内\n                if (startTimeSecond >= leftVertexTime) {\n                    // 算出起始时间的X位置\n                    const _X = (startTimeSecond - leftVertexTime) / this.pxToSecond\n                    const _W = (endTimeSecond - startTimeSecond) / this.pxToSecond // 记录长度\n                    // 绘制播放长度 矩形区域\n                    ctx.beginPath()\n                    ctx.fillStyle = '#637DEC'\n                    ctx.fillRect(_X, 43, _W, 8)\n                }\n            })\n        },\n        // 鼠标事件\n        onMouseHandle(canvas, ctx, _width, _height) {\n            // 鼠标移入\n            canvas.onmouseover = (e) => {\n                // 移入时记录当前时间，在鼠标移动时不会根据当前时间变化而变化\n                if (!this.isMouseDown) {\n                    this.mouseNowDate = this.nowDate\n                }\n            }\n            // 鼠标移出\n            canvas.onmouseout = (e) => {\n                ctx.clearRect(0, 0, _width, _height)\n                this.onBaseFill(ctx, _width, _height)\n                this.onDrawNowDate(ctx, _width)\n            }\n            // 鼠标移动\n            canvas.onmousemove = (e) => {\n                if (!this.isMouseDown) {\n                    ctx.clearRect(0, 0, _width, _height)\n                    this.onBaseFill(ctx, _width, _height)\n                    const offsetX = e.offsetX // 鼠标在画布的X轴位置\n                    // 鼠标移动的距离, 画布中间为起点\n                    const moveLength = offsetX - _width / 2\n                    let nowDateTime = new Date(this.mouseNowDate).getTime()\n                    let nowDate = moment(nowDateTime + this.pxToSecond * moveLength * 1000).format(\n                        'YYYY-MM-DD HH:mm:ss'\n                    )\n                    ctx.font = '12px Arial'\n                    ctx.fillStyle = '#ffffff'\n                    ctx.fillText(nowDate, offsetX - 62, 12)\n                    this.onDrawNowDate(ctx, _width)\n                }\n            }\n            // 鼠标按下\n            canvas.onmousedown = (e) => {\n                this.mousedownX = e.clientX\n                this.mousedownY = e.clientY\n                this.isMouseDown = true\n            }\n        },\n        // 全局事件\n        onDocumentEvent() {\n            // 全局鼠标抬起\n            document.onmouseup = (e) => {\n                // 只有在画布中按下鼠标才生效\n                if (this.isMouseDown) {\n                    this.mouseNowDate = this.nowDate\n                    this.isMouseDown = false\n                }\n            }\n            // 全局鼠标移动\n            document.onmousemove = (e) => {\n                // 只有在画布中按下鼠标才生效\n                if (this.isMouseDown) {\n                    this.ctx.clearRect(0, 0, this._width, this._height)\n                    this.onBaseFill(this.ctx, this._width, this._height)\n                    const clientX = e.clientX // 鼠标在可视窗口的X轴位置\n                    let nowDateTime = new Date(this.mouseNowDate).getTime()\n                    // 画布移动的距离, 鼠标按下为起点\n                    const moveLength = this.mousedownX - clientX\n                    this.nowDate = moment(nowDateTime + this.pxToSecond * moveLength * 1000).format(\n                        'YYYY-MM-DD HH:mm:ss'\n                    )\n\n                    this.onDrawNowDate(this.ctx, this._width)\n                    this.$emit('timechange', this.nowDate)\n                }\n            }\n        }\n    }\n}\n</script>\n<style lang=\"less\" scoped>\n.playbackbar {\n    width: 100%;\n    height: 65px;\n    background-color: #343434;\n    canvas {\n        cursor: pointer;\n        background: #000;\n    }\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlaybackBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlaybackBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PlaybackBar.vue?vue&type=template&id=376f5132&scoped=true&\"\nimport script from \"./PlaybackBar.vue?vue&type=script&lang=js&\"\nexport * from \"./PlaybackBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PlaybackBar.vue?vue&type=style&index=0&id=376f5132&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"376f5132\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"box box-primary play-backs\">\n        <a-spin tip=\"Loading...\" :spinning=\"loading\">\n            <div class=\"spin-content\">\n                <div class=\"box-header\">\n                    <h2\n                        class=\"text-primary text-center\"\n                        v-if=\"ipc\"\n                    >云端录像({{ ipc.channel_name }})-时间轴视图</h2>\n                </div>\n                <div class=\"box-body\">\n                    <div class=\"form-inline\" autocomplete=\"off\" spellcheck=\"false\">\n                        <div class=\"form-group pull-right\">\n                            <div class=\"input-group input-group-sm\">\n                                <a-date-picker\n                                    v-model=\"queryParams.date\"\n                                    @change=\"onDateChange\"\n                                    class=\"playback-date\"\n                                />\n                                <a-button\n                                    type=\"default\"\n                                    icon=\"download\"\n                                    :loading=\"downloadLoading\"\n                                    @click=\"download\"\n                                    :disabled=\"videoUrl === ''\"\n                                />\n                                <!-- <CloudRecordDatePicker class=\"form-control\" :day=\"day\" @update:day=\"updateDay\" ref=\"datePicker\" :serial=\"serial\" :code=\"code\"></CloudRecordDatePicker> -->\n                                <div class=\"input-group-btn\">\n                                    <!-- <router-link :to=\"`/cloudrecord/listview/${this.serial}/${this.code}/${this.day}`\" replace class=\"btn btn-default btn-sm\">\n                            <i class=\"fa fa-hand-o-right\"></i> 列表视图\n                                    </router-link>-->\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                    <EasyPlayer\n                        video-title=\"录像回放\"\n                        :videoUrl=\"videoUrl\"\n                        ref=\"recorder\"\n                        :aspect=\"aspect\"\n                        :onDemand=\"true\"\n                        :autoplay=\"autoplay\"\n                        :muted=\"muted\"\n                        :currentTime=\"currentTime\"\n                        element-loading-text=\"加载中...\"\n                        element-loading-background=\"#000\"\n                        :fluent=\"fluent\"\n                        :stretch=\"stretch\"\n                        @ended=\"onPlayEnded\"\n                        @play=\"onPlay\"\n                        @error=\"onPlayError\"\n                        @timeupdate=\"onPlayTimeUpdate\"\n                    />\n                    <div class=\"clearfix\"></div>\n                    <playback-bar\n                        :initDate=\"currentDate\"\n                        :timeData=\"timeData\"\n                        @timechange=\"onPlaybackBarTimeChange\"\n                    />\n                    <!-- <CloudRecordTimeRule :videos=\"videos\" @timeChange=\"onTimeChange\" ref=\"timeRule\" v-loading=\"loadingRecords\"></CloudRecordTimeRule> -->\n                    <br />\n                </div>\n            </div>\n        </a-spin>\n    </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport PlaybackBar from '@/components/PlaybackBar'\nimport EasyPlayer from '@easydarwin/easyplayer'\nimport { ipcShow } from '@/api/device'\nimport { getRecordFiles } from '@/api/record'\nconst defaultQueryParams = {\n    date: moment(),\n    record_date: moment().format('YYYY-MM-DD'),\n    main_id: undefined\n}\nexport default {\n    name: 'PlayBack',\n    data() {\n        return {\n            files: [],\n            videoUrls: [],\n            videoUrl: '',\n            mode: '4',\n            aspect: '16:9',\n            muted: true,\n            autoplay: true,\n            fluent: false,\n            stretch: false,\n            currentTime: 0,\n            currentDate: '',\n            timeData: [],\n            name: '',\n            ipc: null,\n            queryParams: Object.assign(defaultQueryParams, {}),\n            loading: true,\n            minutesPerUnit: 1,\n            downloadLoading: false,\n            timer: null\n        }\n    },\n    components: {\n        EasyPlayer,\n        PlaybackBar\n    },\n    mounted() {\n        this.initDate()\n        this.initData()\n        this.clearTimer()\n        this.timer = setInterval(this.getRecordFiles, 1000 * 60 * 2)\n    },\n    beforeDestroy() {\n        this.clearTimer()\n        defaultQueryParams.date = moment()\n        defaultQueryParams.record_date = moment().format('YYYY-MM-DD')\n        this.queryParams = Object.assign(defaultQueryParams, {})\n        this.$refs.recorder.destroyPlayer()\n    },\n    computed: {\n        id() {\n            return this.$route.params.id\n        },\n        activeMinutes() {\n            // 按分钟分类，设置分钟的单元大小，将当天所有的视频根据开始时间拆分\n            let minutes = {}\n            for (let video of this.files) {\n                const st = video.start_time * 1000\n                let start = moment(st)\n                let m = moment(st)\n                let s = parseInt(video.duration)\n                if (s <= 0 || s > 36000) continue\n                let secs = m.unix()\n                secs = secs - (secs % (this.minutesPerUnit * 60))\n                let _m = moment.unix(secs)\n                if (!start.isSame(_m, 'day')) {\n                    // 跨天\n                    continue\n                }\n                let mtext = _m.format('HH:mm')\n                let duration_start, duration_end\n                if (this.start) {\n                    duration_start = moment(start).startOf('day').add(this.start, 'minute')\n                }\n                if (this.end) {\n                    duration_end = moment(start).startOf('day').add(this.end, 'minute')\n                }\n                minutes[mtext] = Object.assign({ current_time: 0 }, video)\n                if (duration_start && m.isBefore(duration_start, 'minute')) {\n                    delete minutes[mtext]\n                }\n                if (duration_end && m.isAfter(duration_end, 'minute')) {\n                    delete minutes[mtext]\n                }\n                for (let i = 1; i <= s; i++) {\n                    m.add(1, 'seconds')\n                    if (duration_start && m.isBefore(duration_start, 'minute')) {\n                        continue\n                    }\n                    if (duration_end && m.isAfter(duration_end, 'minute')) {\n                        break\n                    }\n                    secs = m.unix()\n                    secs = secs - (secs % (this.minutesPerUnit * 60))\n                    _m = moment.unix(secs)\n                    if (!start.isSame(_m, 'day')) {\n                        // 跨天\n                        continue\n                    }\n                    let _mtext = _m.format('HH:mm')\n                    if (_mtext != mtext) {\n                        mtext = _mtext\n                        minutes[mtext] = Object.assign({ current_time: i }, video)\n                    }\n                }\n            }\n            return minutes\n        }\n    },\n    methods: {\n        onPlay(e) {\n            // console.log('onPlay:', e)\n        },\n        onPlayEnded() {\n            const idx = this.videoUrls.indexOf(this.videoUrl)\n            let index = 0\n            if (idx >= 0) {\n                if (idx >= this.files.length - 1) {\n                    index = idx\n                } else {\n                    index = idx + 1\n                }\n            }\n\n            const video = this.files[index]\n            console.log('index:', index)\n            console.log('index video:', video)\n            if (video.download_url !== this.videoUrl) {\n                this.videoUrl = video.download_url\n            } else {\n                console.log('与刚播放完的视频地址一样')\n            }\n        },\n        onPlayError(e) {\n            console.log('onPlayError:', e)\n        },\n        onPlayTimeUpdate(currentTime) {\n            if (currentTime < 1) {\n                return\n            }\n            // 快进时，匹配播放地址，然后将从视频的开始时间+快进秒数 等到当前的播放时间\n            const idx = this.videoUrls.indexOf(this.videoUrl)\n            if (idx >= 0 && idx < this.files.length) {\n                const video = this.files[idx]\n                const startTime = moment(video.start_time * 1000)\n                startTime.add(currentTime, 'seconds')\n                this.currentDate = startTime.format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        initData() {\n            this.loading = true\n            this.getIpc()\n            setTimeout(() => {\n                this.loading = false\n            }, 500)\n        },\n        async getIpc() {\n            this.ipc = await ipcShow(this.id)\n            if (this.ipc) {\n                this.queryParams.main_id = this.ipc.main_id\n                setTimeout(() => {\n                    this.getRecordFiles()\n                }, 200)\n            }\n        },\n        async getRecordFiles(isLoading = false) {\n            if (isLoading) {\n                this.loading = true\n            }\n            this.files = await getRecordFiles(this.queryParams)\n            if (this.files.length) {\n                this.videoUrls = this.files.map((item) => item.download_url)\n                const lastVideoUrl = this.files[this.files.length - 1]['download_url']\n                if (this.videoUrl !== lastVideoUrl) {\n                    this.videoUrl = lastVideoUrl\n                }\n\n                this.currentDate = moment(this.files[0]['start_time'] * 1000).format('YYYY-MM-DD HH:mm:ss')\n                this.timeData = this.files.map((item) => {\n                    return {\n                        startTime: moment(item.start_time * 1000).format('YYYY-MM-DD HH:mm:ss'),\n                        endTime: moment(item.end_time * 1000).format('YYYY-MM-DD HH:mm:ss')\n                    }\n                })\n            } else {\n                this.videoUrl = ''\n                this.timeData = []\n            }\n            if (isLoading) {\n                setTimeout(() => {\n                    this.loading = false\n                }, 500)\n            }\n        },\n        initDate() {\n            this.currentDate = this.queryParams.date.format('YYYY-MM-DD HH:mm:ss')\n        },\n        onDateChange(date, dateString) {\n            this.queryParams.date = date\n            this.queryParams.record_date = dateString\n            this.initDate()\n            this.getRecordFiles(true)\n        },\n        onPlaybackBarTimeChange(time) {\n            const currentDate = moment(time).format('YYYY-MM-DD')\n            const timeInputValue = this.queryParams.date.format('YYYY-MM-DD')\n            if (currentDate < timeInputValue) {\n                this.queryParams.date = moment(time)\n            }\n            const activeMinutes = this.activeMinutes\n            const currentMinute = moment(time).format('HH:mm')\n            if (activeMinutes.hasOwnProperty(currentMinute)) {\n                const currentVideoUrl = activeMinutes[currentMinute]['download_url']\n                if (currentVideoUrl !== this.videoUrl) {\n                    this.videoUrl = currentVideoUrl\n                }\n                this.currentTime = activeMinutes[currentMinute]['current_time']\n            } else {\n                this.videoUrl = ''\n            }\n        },\n        download() {\n            this.downloadLoading = true\n            fetch(this.videoUrl)\n                .then((res) => res.blob())\n                .then((blob) => {\n                    const a = document.createElement('a')\n                    const objectUrl = window.URL.createObjectURL(blob)\n                    a.download = name\n                    a.href = objectUrl\n                    a.click()\n                    window.URL.revokeObjectURL(objectUrl)\n                    this.downloadLoading = false\n                })\n        },\n        clearTimer() {\n            if (this.timer) {\n                clearInterval(this.timer)\n                this.timer = null\n            }\n        }\n    },\n    filters: {\n        filterTime(time) {\n            return moment(time).format('YYYY-MM-DD HH:mm')\n        },\n        statusTypeFilter(type) {\n            const statusTypeMap = {\n                false: 'warning',\n                true: 'success'\n            }\n            return statusTypeMap[type]\n        }\n    },\n    watch: {\n        currentDate(_newDate, _oldDate) {}\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.box {\n    .box-header {\n        color: #444;\n        display: block;\n        padding: 10px;\n        position: relative;\n    }\n    .box-body {\n        .easy-player {\n            max-width: 700px;\n            margin: 0 auto;\n            height: 400px !important;\n        }\n        .clearfix {\n            height: 50px;\n        }\n    }\n}\n.text-center {\n    text-align: center;\n}\n</style>\n<style lang=\"less\">\n.playback-date {\n    .ant-calendar-picker-clear {\n        display: none;\n    }\n}\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2df0b31f&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=2df0b31f&lang=less&scoped=true&\"\nimport style1 from \"./index.vue?vue&type=style&index=1&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2df0b31f\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=2df0b31f&lang=less&scoped=true&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlaybackBar.vue?vue&type=style&index=0&id=376f5132&lang=less&scoped=true&\"","import Request from '@/axios/request'\n\nexport function saveBindPartner (formData) {\n    return Request.promisePost('device/saveBindPartner', formData)\n}\n\nexport function getUnboundPartnerDevices (params = {}) {\n    return Request.get('device/unboundPartnerDevices', {\n        params\n    })\n}\n\nexport function editNvr (id, formData) {\n    return Request.promisePost('device/editNvr', formData, { params: { id: id } })\n}\n\nexport function getNvrDevices (params = {}) {\n    return Request.get('device/nvrDevices', { params })\n}\n\nexport function getThirdPartyNvrTree (params = {}) {\n    return Request.get('device/nvrDevices', { params })\n}\n\nexport function getIpcDevices (params = {}) {\n    return Request.get('device/ipcDevices', { params })\n}\n\nexport function getStatusItems () {\n    return Request.get('device/statusItems')\n}\n\nexport function getNvr (id) {\n    return Request.get('device/nvrShow', { params: { id: id } })\n}\n\nexport function getDeviceRegisterLogs (params = {}) {\n    return Request.promiseGet('device/registerLogs', { params })\n}\n\nexport function getDeviceActiveLogs (params = {}) {\n    return Request.promiseGet('device/activeLogs', { params })\n}\n\nexport function batchDeleteIpc (ids) {\n    return Request.post('device/batchDeleteIpc', { ids: ids })\n}\n\nexport function editIpc (id, formData) {\n    return Request.promisePost('device/editIpc', formData, { params: { id: id } })\n}\n\nexport function batchSyncIpc (ids) {\n    return Request.post('device/batchSyncIpc', { ids: ids })\n}\n\nexport function batchActiveIpc (ids) {\n    return Request.post('device/batchActiveIpc', { ids: ids })\n}\n\nexport function batchLockIpc (ids) {\n    return Request.post('device/batchLockIpc', { ids: ids })\n}\n\nexport function batchOpenLiveIpc (ids) {\n    return Request.post('device/batchOpenLiveIpc', { ids: ids })\n}\n\nexport function batchCloseLiveIpc (ids) {\n    return Request.post('device/batchCloseLiveIpc', { ids: ids })\n}\n\nexport function getMediaServerList () {\n    return Request.get('device/mediaServerList')\n}\n\nexport function batchUpdateMediaServer (ids, mediaServerId) {\n    return Request.post('device/batchUpdateMediaServer', { ids: ids, mediaServerId: mediaServerId })\n}\nexport function batchUpdateRtpProto (ids, rtpProto) {\n    return Request.post('device/batchUpdateRtpProto', { ids: ids, rtp_proto: rtpProto })\n}\n\nexport function nvrItems (params = {}) {\n    return Request.get('device/nvrItems', { params })\n}\n\nexport function batchBindRecorder (ids, recorderId) {\n    return Request.post('device/batchBindRecorder', { ids: ids, recorderId: recorderId })\n}\n\nexport function videoOnlineList (params = {}) {\n    return Request.get('device/videoOnlineList', { params })\n}\n\nexport function videoSrc (mediaServerId, url) {\n    return Request.get('device/videoCover', {\n        params: {\n            mediaServerId: mediaServerId,\n            url: url\n        }\n    })\n}\n\nexport function ptzCtrl (mainId, command) {\n  return Request.post('device/ptzCtrl', { main_id: mainId, command_type: command })\n}\n\nexport function liveUrl (mainId) {\n  return Request.post('device/liveUrl', { main_id: mainId })\n}\n\nexport function batchBindRecordPlan (ids, planId) {\n  return Request.promisePost('device/batchBindRecordPlan', { ids: ids, planId: planId })\n}\n\nexport function ipcShow(id) {\n    return Request.get('device/ipcShow', { params: { id: id } })\n}","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=1&lang=less&\"","import Request from '@/axios/request'\n\nexport function getRecordPlans (params = {}) {\n  return Request.get('record/plans', { params })\n}\n\nexport function addRecordPlan (formData) {\n  return Request.promisePost('record/addPlan', formData)\n}\n\nexport function editRecordPlan (id, formData) {\n  return Request.promisePost('record/editPlan', formData, { params: { id: id } })\n}\nexport function getRecordPlan (id) {\n  return Request.get('record/plan', { params: { id: id } })\n}\n\nexport function delRecordPlan (id) {\n  return Request.promisePost('record/delPlan', { id: id })\n}\n\nexport function getRecordPlanItems (params = {}) {\n  return Request.get('record/planItems', { params })\n}\n\nexport function getRecordChannels (params = {}) {\n  return Request.get('record/recordChannels', { params })\n}\n\nexport function getRecordFiles (params = {}) {\n  return Request.get('record/files', { params })\n}\nexport function getSummaryList (params = {}) {\n  return Request.get('record/summary', { params })\n}\n\nexport function startPlayBack(id) {\n  return Request.promisePost('record/startPlayBack', {video_id: id})\n}\n\nexport function closePlayBack(id) {\n  return Request.promisePost('record/closePlayBack', {video_id: id})\n}\n\nexport function delPlayBack(id) {\n  return Request.promisePost('record/delPlayBack', {video_id: id})\n}"],"sourceRoot":""}